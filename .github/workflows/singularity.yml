name: Singularity

permissions:
  contents: read

on:
  push:
    branches:
      - main
    tags: '*'
  workflow_run:
    workflows: ["Style"]
    types:
      - completed
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CONTAINER_NAME: palace.sif

jobs:
  # Filter to allow skipping the test if no relevant changes occurred.
  filter:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      github.event_name != 'workflow_run'
    outputs:
      test: ${{ steps.filter.outputs.test }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            test:
              - 'palace/**'
              - 'cmake/**'
              - 'extern/**'
              - 'examples/**'
              - 'test/examples/**'
              - 'test/unit/**'
              - '.github/workflows/singularity.yml'

  build-and-test-singularity:
    needs: filter
    runs-on: palace_ubuntu-latest_16-core
    steps:
      - uses: actions/checkout@v4
        if: needs.filter.outputs.test == 'true'

      - uses: singularityhub/install-singularity@main
        if: needs.filter.outputs.test == 'true'

      - name: Build container
        if: needs.filter.outputs.test == 'true'
        run: |
          sudo singularity build --bind ${{ github.workspace }}:/opt/palace-src:ro \
                                 $CONTAINER_NAME singularity/singularity.def

      - name: Run tests
        if: needs.filter.outputs.test == 'true'
        env:
          NUM_PROC_TEST_MAX: '8'
        run: |
          # Configure environment
          export NUM_PROC_TEST=$(nproc 2> /dev/null || sysctl -n hw.ncpu)
          if [[ "$NUM_PROC_TEST" -gt "$NUM_PROC_TEST_MAX" ]]; then
            NUM_PROC_TEST=$NUM_PROC_TEST_MAX
          fi
          export PALACE_TEST="singularity run $(pwd)/$CONTAINER_NAME"

          # Run tests
          julia --project=test/examples -e 'using Pkg; Pkg.instantiate()'
          julia --project=test/examples --color=yes test/examples/runtests.jl

      - uses: actions/upload-artifact@v4
        if: needs.filter.outputs.test == 'true'
        with:
          name: ${{ env.CONTAINER_NAME }}
          path: ${{ env.CONTAINER_NAME }}
          retention-days: 1
