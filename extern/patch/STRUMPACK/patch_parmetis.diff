diff --git a/src/sparse/ordering/MetisReordering.hpp b/src/sparse/ordering/MetisReordering.hpp
index 39deafe..2d89a04 100644
--- a/src/sparse/ordering/MetisReordering.hpp
+++ b/src/sparse/ordering/MetisReordering.hpp
@@ -43,29 +43,6 @@
 
 namespace strumpack {
 
-  template<typename integer_t> inline int WRAPPER_METIS_NodeNDP
-  (std::vector<idx_t>& xadj, std::vector<idx_t>& adjncy,
-   idx_t* vwgt, idx_t seps, idx_t* options, std::vector<integer_t>& perm,
-   std::vector<integer_t>& iperm, std::vector<idx_t>& sizes) {
-    idx_t n = perm.size();
-    std::vector<idx_t> order(n), iorder(n);
-    int ierr = METIS_NodeNDP
-      (n, xadj.data(), adjncy.data(), vwgt, seps, options,
-       order.data(), iorder.data(), sizes.data());
-    perm.assign(order.begin(), order.end());
-    iperm.assign(iorder.begin(), iorder.end());
-    return ierr;
-  }
-  template<> inline int WRAPPER_METIS_NodeNDP
-  (std::vector<idx_t>& xadj, std::vector<idx_t>& adjncy,
-   idx_t* vwgt, idx_t seps, idx_t* options, std::vector<idx_t>& perm,
-   std::vector<idx_t>& iperm, std::vector<idx_t>& sizes) {
-    idx_t n = perm.size();
-    return METIS_NodeNDP
-      (n, xadj.data(), adjncy.data(), vwgt, seps, options,
-       perm.data(), iperm.data(), sizes.data());
-  }
-
   template<typename integer_t> inline int WRAPPER_METIS_NodeND
   (std::vector<idx_t>& xadj, std::vector<idx_t>& adjncy,
    idx_t* vwgt, idx_t* options, std::vector<integer_t>& perm,
@@ -230,21 +207,21 @@ namespace strumpack {
     METIS_SetDefaultOptions(options);
     // options[METIS_OPTION_CCORDER] = 1;
     // options[METIS_OPTION_SEED] = 42;
-    if (opts.use_METIS_NodeNDP()) {
-      integer_t nodes =
-        std::max(integer_t(3), ( n / opts.nd_param() ) / 2 * 2 + 1);
-      integer_t separators = nodes / 2;
-      std::vector<idx_t> sizes(nodes + 1);
-      ierr = WRAPPER_METIS_NodeNDP
-        (xadj, adjncy, nullptr, separators + 1,
-         options /*nullptr*/, iperm, perm, sizes);
+    //if (opts.use_METIS_NodeNDP()) {
+    //  integer_t nodes =
+    //    std::max(integer_t(3), ( n / opts.nd_param() ) / 2 * 2 + 1);
+    //  integer_t separators = nodes / 2;
+    //  std::vector<idx_t> sizes(nodes + 1);
+    //  ierr = WRAPPER_METIS_NodeNDP
+    //    (xadj, adjncy, nullptr, separators + 1,
+    //     options /*nullptr*/, iperm, perm, sizes);
 #if defined(STRUMPACK_USE_MPI)
-      if (opts.use_MUMPS_SYMQAMD())
-        sep_tree = aggressive_amalgamation(n, ptr, ind, perm, iperm, opts);
-      else
+    //  if (opts.use_MUMPS_SYMQAMD())
+    //    sep_tree = aggressive_amalgamation(n, ptr, ind, perm, iperm, opts);
+    //  else
 #endif
-        sep_tree = sep_tree_from_metis_sizes(nodes, separators, sizes);
-    } else {
+    //    sep_tree = sep_tree_from_metis_sizes(nodes, separators, sizes);
+    //} else {
       ierr = WRAPPER_METIS_NodeND
         (xadj, adjncy, nullptr, options /*nullptr*/, iperm, perm);
 #if defined(STRUMPACK_USE_MPI)
@@ -253,7 +230,7 @@ namespace strumpack {
       else
 #endif
         sep_tree = build_sep_tree_from_perm(ptr, ind, perm, iperm);
-    }
+    //}
     if (ierr != METIS_OK) {
       std::cerr << "# ERROR: Metis nested dissection reordering failed"
                 << " with error code " << ierr << std::endl;
diff --git a/src/sparse/ordering/ParMetisReordering.hpp b/src/sparse/ordering/ParMetisReordering.hpp
index dc0b363..94d3608 100644
--- a/src/sparse/ordering/ParMetisReordering.hpp
+++ b/src/sparse/ordering/ParMetisReordering.hpp
@@ -42,10 +42,9 @@ namespace strumpack {
                               std::vector<idx_t>& sizes, MPI_Comm c) {
     std::vector<idx_t> vtxdist(dist.size()), loc_order(local_order.size());
     vtxdist.assign(dist.begin(), dist.end());
-    int ierr = ParMETIS_V32_NodeND
-      (vtxdist.data(), xadj.data(), adjncy.data(), NULL,
-       &numflag, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-       loc_order.data(), sizes.data(), &c);
+    int ierr = ParMETIS_V3_NodeND
+      (vtxdist.data(), xadj.data(), adjncy.data(), &numflag,
+       NULL, loc_order.data(), sizes.data(), &c);
     local_order.assign(loc_order.begin(), loc_order.end());
     return ierr;
   }
@@ -56,10 +55,9 @@ namespace strumpack {
                               std::vector<idx_t>& local_order,
                               std::vector<idx_t>& sizes,
                               MPI_Comm c) {
-    return ParMETIS_V32_NodeND
+    return ParMETIS_V3_NodeND
       (const_cast<idx_t*>(dist.data()), xadj.data(), adjncy.data(),
-       NULL, &numflag, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-       local_order.data(), sizes.data(), &c);
+       &numflag, NULL, local_order.data(), sizes.data(), &c);
   }
 
   template<typename scalar_t,typename integer_t>
